{"version":3,"sources":["Context/BookList.js","Components/Navbar.js","Components/Booklist.js","Components/ToogleButton.js","App.js","index.js"],"names":["BookListContext","createContext","InitialState","books","reducer","state","action","type","payload","filter","item","id","BookListContextProvide","props","useReducer","dispatch","useEffect","booksData","fetch","then","res","json","data","console","log","Object","entries","forEach","key","value","push","Provider","children","Navbar","useContext","length","Booklist","className","map","title","author","onClick","ToogleButton","useState","setTitle","setAuthor","bookTitleInput","useRef","bookAuthorInput","submitRef","current","focus","formSubmitHandler","e","preventDefault","method","headers","body","JSON","stringify","name","catch","err","onSubmit","placeholder","ref","onChange","target","onKeyDown","required","App","BookList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82665f84.chunk.js","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\nexport const BookListContext = createContext();\n\n//Initializing the initial state\n\nlet InitialState = {\n  books: [\n    // { title: \" Think like a monk\", author: \"Jay Shetty\", id: 1 },\n    // { title: \"The way of king\", author: \"Juan\", id: 2 },\n  ],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BOOKS\":\n      return {\n        books: [...state.books, action.payload],\n      };\n    case \"DELETE_BOOKS\":\n      return {\n        books: state.books.filter((item) => item.id !== action.payload),\n      };\n    case \"LOAD_LOCAL_STORAGE_DATA\":\n      return {\n        books: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst BookListContextProvide = (props) => {\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  useEffect(() => {\n    let booksData = [];\n    // localStorage.todo = JSON.stringify(state.books);\n\n    fetch(\"https://test-projects-dacb2.firebaseio.com/todo.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data) {\n          Object.entries(data).forEach(([key, value]) => {\n            booksData.push({ id: key, ...value });\n          });\n        }\n        dispatch({ type: \"LOAD_LOCAL_STORAGE_DATA\", payload: booksData });\n      });\n  }, []);\n  return (\n    <BookListContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </BookListContext.Provider>\n  );\n};\n\nexport default BookListContextProvide;\n","import React, { useContext } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// const CouunterContext = React.createContext(\"123\");\n\n// class Navbar extends Component {\n//   // static contextType = ThemeContext;\n\n//   render() {\n//     return (\n//       <AuthContext.Consumer>\n//         {(authContext) => (\n//           <ThemeContext.Consumer>\n//             {(themeContext) => {\n//               const { isAuthenticated, toggleAuth } = authContext;\n//               const { name, hobby, isLight, dark, light } = themeContext;\n//               // console.log(this.context.name);\n//               const theme = isLight ? light : dark;\n//               return (\n//                 <div style={{ background: theme.bg, color: theme.tc }}>\n//                   <nav>\n//                     <h1>{name + \" \" + hobby}</h1>\n//                     <button onClick={toggleAuth}>\n//                       {isAuthenticated ? \"Log IN\" : \"Log out\"}\n//                     </button>\n//                     <ul>\n//                       <li>Home</li>\n//                       <li>About</li>\n//                       <li>Contact</li>\n//                     </ul>\n//                   </nav>\n//                 </div>\n//               );\n//             }}\n//           </ThemeContext.Consumer>\n//         )}\n//       </AuthContext.Consumer>\n//     );\n//   }\n// }\n\n// export default Navbar;\nfunction Navbar(props) {\n  const { state } = useContext(BookListContext);\n  return (\n    <nav>\n      <h1>My Booklist on react hooks</h1>\n      <p>Currently we have {state.books.length} books </p>\n    </nav>\n  );\n}\nexport default Navbar;\n","import React, { useContext } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// class Booklist extends Component {\n//   static contextType = ThemeContext;\n\n//   render() {\n//     const { isLight, dark, light } = this.context;\n//     const theme = isLight ? light : dark;\n\n//     return (\n//       <div\n//         className=\"book-list\"\n//         style={{ background: theme.bg, color: theme.tc }}\n//       >\n//         <ul>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Think like a monk\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Three Mistakes of my life\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Dhoni the untold story\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Booklist;\nfunction Booklist(props) {\n  const { state, dispatch } = useContext(BookListContext);\n\n  return (\n    <div className=\"book-list\">\n      {state.books.length > 0 ? (\n        <ul>\n          {state.books.map(({ id, title, author }) => (\n            <li key={id} className=\"booklist__item\">\n              <div className=\"content\">\n                <div className=\"title\">{title}</div>\n                <div className=\"author\">{author}</div>\n              </div>\n              <button\n                onClick={() =>\n                  dispatch({\n                    type: \"DELETE_BOOKS\",\n                    payload: id,\n                  })\n                }\n                className=\"remove_btn\"\n              >\n                X\n              </button>{\" \"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No books found</div>\n      )}\n    </div>\n  );\n}\n\nexport default Booklist;\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// class ToogleButton extends Component {\n//   static contextType = ThemeContext;\n//   render() {\n//     return <button onClick={this.context.themeToggler}>Toogle Theme</button>;\n//   }\n// }\n\n// export default ToogleButton;\n\nconst ToogleButton = () => {\n  const { state, dispatch } = useContext(BookListContext);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const bookTitleInput = useRef(null);\n  const bookAuthorInput = useRef(null);\n  const submitRef = useRef(null);\n\n  // useEffect(() => {\n  //   bookTitleInput.current.focus();\n  // }, []);\n  useEffect(() => {\n    bookTitleInput.current.focus();\n  }, [state.books]);\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    fetch(\"https://test-projects-dacb2.firebaseio.com/todo.json\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({ title, author }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        dispatch({\n          type: \"ADD_BOOKS\",\n          payload: { title, author, id: data.name },\n        });\n        setAuthor(\"\");\n        setTitle(\"\");\n      })\n      .catch((err) => console.log(err));\n  };\n  function onKeyTitleHandler(e) {\n    if (e.key === \"Enter\") {\n      bookAuthorInput.current.focus();\n    }\n  }\n  function onKeyAuthorHandler(e) {\n    if (e.key === \"Enter\") {\n      submitRef.current.focus();\n    }\n  }\n  function onKeySubmitHandler(e) {\n    formSubmitHandler(e);\n  }\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <input\n        name=\"bookName\"\n        placeholder=\"Enter book Name \"\n        value={title}\n        ref={bookTitleInput}\n        onChange={(e) => setTitle(e.target.value)}\n        onKeyDown={onKeyTitleHandler}\n        required\n      />\n      <input\n        name=\"bookAuthor\"\n        placeholder=\"Enter book Author\"\n        ref={bookAuthorInput}\n        onChange={(e) => setAuthor(e.target.value)}\n        value={author}\n        onKeyDown={onKeyAuthorHandler}\n        required\n      />\n      <button type=\"submit\" onKeyDown={onKeySubmitHandler} ref={submitRef}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default ToogleButton;\n","import React from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Booklist from \"./Components/Booklist\";\nimport BookListContextProvide from \"./Context/BookList\";\nimport ToogleButton from \"./Components/ToogleButton\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BookListContextProvide>\n        <Navbar />\n        <ToogleButton />\n        <Booklist />\n      </BookListContextProvide>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}