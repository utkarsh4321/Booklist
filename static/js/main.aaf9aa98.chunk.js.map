{"version":3,"sources":["Reducer/AuthReducer.js","Actions/actionTypes.js","Actions/bookListActions.js","Context/AuthContext.js","Components/Home.js","Components/Login.js","Components/Signup.js","Reducer/BooklistReducer.js","Context/BookList.js","CostumHooks/useRestApi.js","Components/Booklist.js","Components/ToogleButton.js","Components/UserList.js","HOC/AuthRoute.js","Components/Navbar.js","App.js","index.js"],"names":["initialState","authError","authMessage","authData","showLoader","showError","successedNotification","isAuthenticated","freshedLogin","rootReducer","state","type","payload","data","message","addBooksAction","response","removeBooksAction","fetchBooklistSucces","setInputTitle","getSingleBooklist","setUpdateInputs","authRequestSuccess","authFails","checkAuth","AuthContext","createContext","AuthContextProvider","props","useReducer","dispatch","history","useHistory","onAuth","useCallback","a","method","params","baseUrl","process","email","password","displayName","fetch","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","idToken","localId","push","pathname","setTimeout","catch","err","error","myApp","auth","signInWithEmailAndPassword","errorMessage","console","log","useAuth","Provider","value","children","Home","Login","useContext","useState","setEmail","setPassword","forgotPassword","setForgotPassword","forgotPasswordEmail","setForgotPasswordEmail","forgotPasswordMessage","setForgotPasswordMessage","provider","firebase","GoogleAuthProvider","onSubmit","e","preventDefault","length","placeholder","onChange","target","onClick","signInWithPopup","result","trim","sendPasswordResetEmail","url","handleCodeInApp","Signup","setPasswrod","setName","books","loader","booksData","author","title","id","updatedId","filter","item","index","BookListContext","BookListContextProvide","localStorage","getItem","Object","entries","forEach","key","name","obj","userId","useGetTodos","fetchData","useEffect","Booklist","bookItem","setUpdates","bookUpdateTitleInput","useRef","bookUpdateAuthorInput","updateHandler","bookObj","stopPropagation","current","focus","onChangeTitleHandler","onChangeAuthorHandler","onFocusTitle","onFocusAuthor","removeBooklistHandler","removedIndex","newBook","parse","reduce","accumulator","className","onDragEnd","destination","source","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","i","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","isDraggingOver","background","padding","width","map","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","onKeyDown","bind","ToogleButton","authState","setTitle","setAuthor","bookTitleInput","bookAuthorInput","submitRef","formSubmitHandler","storedBooks","required","UserList","BookList","AuthRoute","Component","component","rest","render","to","Navbar","removeItem","signOut","initializeApp","apiKey","authDomain","App","setLoader","onAuthStateChanged","user","setItem","uid","replace","path","exact","store","basename","ReactDOM","document","getElementById"],"mappings":"+OAWaA,EAAe,CAC1BC,UAAW,GACXC,YAAa,GACbC,SAAU,GACVC,YAAY,EACZC,WAAW,EACXC,uBAAuB,EACvBC,iBAAiB,EACjBC,cAAc,GAsEDC,EApEK,WAA8C,IAA7CC,EAA4C,uDAApCV,EAAoC,yCAApBW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjD,OAAQD,GACN,ICNwB,eDOtB,OAAO,2BACFD,GADL,IAEEN,YAAY,IAGhB,ICXgC,uBDY9B,OAAO,2BACFM,GADL,IAEEP,SAAUS,EAAQC,MAAQ,GAC1BX,YAAaU,EAAQE,QACrBR,uBAAuB,EACvBF,YAAY,IAEhB,IClB6B,oBDmB3B,OAAO,2BACFM,GADL,IAEET,UAAWW,EAAQE,QACnBT,UAAWO,EAAQP,YAEvB,ICvByB,gBDwBvB,GAAIK,EAAML,UACR,OAAO,2BACFK,GADL,IAEEL,UAAWO,EACXR,YAAY,IAGhB,GAAIM,EAAMJ,sBACR,OAAO,2BACFI,GADL,IAEEJ,sBAAuBM,EACvBR,YAAY,IAGhB,MACF,ICxDyB,gBDyDvB,OAAO,2BACFM,GADL,IAEEN,YAAY,IAEhB,IC3CuB,cD4CrB,MAAO,CACLH,UAAW,GACXC,YAAa,GACbC,SAAU,GACVC,YAAY,EACZC,WAAW,EACXC,uBAAuB,EACvBC,iBAAiB,GAErB,ICnDqB,YDoDnB,OAAO,2BACFG,GADL,IAEEH,gBAAiBK,IAErB,ICvDwB,eDwDtB,OAAO,2BACFF,GADL,IAEEF,aAAcI,IAElB,QACE,OAAOF,I,OEjEAK,EAAiB,SAACC,GAAD,MAAe,CAC3CL,KDrBuB,YCsBvBC,QAASI,IAGEC,EAAoB,SAACD,GAAD,MAAe,CAC9CL,KDzB0B,eC0B1BC,QAASI,IAcEE,EAAsB,SAACF,GAAD,MAAe,CAChDL,KDpCoC,yBCqCpCC,QAASI,IAGEG,EAAgB,SAACH,GAAD,MAAe,CAC1CL,KDtC6B,kBCuC7BC,QAASI,IAQEI,EAAoB,SAACJ,GAAD,MAAe,CAC9CL,KD9CyC,8BC+CzCC,QAASI,IAEEK,EAAkB,SAACL,GAAD,MAAe,CAC5CL,KDhD+B,oBCiD/BC,QAASI,IASEM,EAAqB,SAACN,GAAD,MAAe,CAC/CL,KDtDkC,uBCuDlCC,QAASI,IAGEO,EAAY,SAACX,GAAD,MAAc,CACrCD,KD1D+B,oBC2D/BC,YAYWY,EAAY,SAACR,GACxB,MAAO,CACLL,KDrEqB,YCsErBC,QAASI,IAAY,IAIZR,EAAe,SAACQ,GAAD,MAAe,CACzCL,KD1E0B,eC2E1BC,QAASI,IAAY,ICvFVS,EAAcC,0BAsHZC,MATf,SAA6BC,GAAQ,IAAD,EA3GpB,WAAO,IAAD,EACMC,qBAAWpB,EAAaT,GAD9B,mBACbU,EADa,KACNoB,EADM,KAEdC,EAAUC,cACVC,EAASC,sBAAW,uCACxB,qCAAAC,EAAA,6DAASC,EAAT,EAASA,OAAT,IAAiBC,cAAjB,MAA0B,GAA1B,EACiB,WAAXD,IACEE,EADmB,wEACwDC,2CAC3E3B,EAAU,CACZ4B,MAAOH,EAAOG,MACdC,SAAUJ,EAAOI,SACjBC,YAAaL,EAAOK,aAGP,WAAXN,IACFE,EAAO,oFAAgFC,2CACvF3B,EAAU,CACR4B,MAAOH,EAAOG,MACdC,SAAUJ,EAAOI,WAIrBX,EDgC0B,CAChCnB,KDnD0B,iBEoBpBgC,MAAML,EAAS,CACbF,OAAQ,OACRQ,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUnC,KAEpBoC,MAAK,SAACC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAEJC,QAAQC,OAAOJ,MAGzBD,MAAK,SAACnC,GACLiB,EDpB6B,CAAEnB,KD7Bd,kBEkDF,WAAXyB,IACFN,EACER,EAAmB,CACjBT,KAAM,CAAEyC,QAASzC,EAAKyC,QAASC,QAAS1C,EAAK0C,SAC7CzC,QAAS,uBAGbgB,EAASN,GAAU,IACnBM,EAAStB,GAAa,IAEtBuB,EAAQyB,KAAK,CACXC,SAAU,YACV/C,MAAOA,IAETgD,YAAW,WACT5B,EAAStB,GAAa,MACrB,MAELsB,EACER,EAAmB,CACjBR,QAAS,+CAQd6C,MA5CH,uCA4CS,WAAOC,GAAP,iBAAAzB,EAAA,sEAGKyB,EAAIT,OAHT,gBAEMrC,EAFN,EAEH+C,MAAS/C,QAEXgB,EDrD6B,CAAEnB,KD7Bd,kBEmFjBmB,EAASP,EAAU,CAAET,QAASA,EAAST,WAAW,KAL7C,2CA5CT,wDAoDa,WAAX+B,IACFN,EDvB0B,CAChCnB,KDnD0B,iBE2EpBmD,EACGC,OACAC,2BAA2B3B,EAAOG,MAAOH,EAAOI,UAChDO,MAAK,SAACC,GACLnB,EDhE6B,CAAEnB,KD7Bd,kBE+FjBmB,EAASN,GAAU,IACnBM,EAAStB,GAAa,IAEtBkD,YAAW,WACT5B,EAAStB,GAAa,MACrB,QAEJmD,OAAM,SAAUE,GAEf,IAAII,EAAeJ,EAAM/C,QACzBgB,ED5E6B,CAAEnB,KD7Bd,kBE0GjBmB,EAASP,EAAU,CAAET,QAASmD,EAAc5D,WAAW,SA3F/D,mBAgGS,kBAAM6D,QAAQC,IAAI,oCAhG3B,2CADwB,sDAmGxB,CAACzD,EAAOqB,IAEV,MAAO,CAACrB,EAAOuB,EAAQH,GAIWsC,GADA,mBAC3B1D,EAD2B,KACpBuB,EADoB,KACZH,EADY,KAElC,OACE,kBAACL,EAAY4C,SAAb,CAAsBC,MAAO,CAAE5D,QAAOuB,SAAQH,aAC3CF,EAAM2C,W,iBCnHEC,G,MARF,WACX,OACE,6BACE,8DC2GSC,EA3GD,WAAO,IAAD,EACQC,qBAAWjD,GAA7Bf,EADU,EACVA,MAAOuB,EADG,EACHA,OADG,EAGQ0C,mBAAS,IAHjB,mBAGXnC,EAHW,KAGJoC,EAHI,OAIcD,mBAAS,IAJvB,mBAIXlC,EAJW,KAIDoC,EAJC,OAK0BF,oBAAS,GALnC,mBAKXG,EALW,KAKKC,EALL,OAMoCJ,mBAAS,IAN7C,mBAMXK,EANW,KAMUC,EANV,OAOwCN,mBAAS,IAPjD,mBAOXO,EAPW,KAOYC,EAPZ,KAoBZC,EAAW,IAAIC,IAAStB,KAAKuB,mBAsCjClF,EAKEM,EALFN,WACAC,EAIEK,EAJFL,UACAJ,EAGES,EAHFT,UACAC,EAEEQ,EAFFR,YACAI,EACEI,EADFJ,sBAGF,OACE,6BACE,qCACCF,GAAc,2CACdC,GAAa,6BAAMJ,GACnBK,GAAyB,6BAAMJ,GAC/BgF,EACD,0BAAMK,SA7Dc,SAACC,GACvBA,EAAEC,iBACEjD,EAAMkD,OAAS,GAAKjD,EAASiD,OAAS,GACxCzD,EAAO,CACLG,OAAQ,SACRC,OAAQ,CAAEG,QAAOC,gBAyDjB,2BACE9B,KAAK,QACLgF,YAAY,QACZrB,MAAO9B,EACPoD,SApEc,SAACJ,GAAD,OAAOZ,EAASY,EAAEK,OAAOvB,UAsEzC,2BACE3D,KAAK,WACLgF,YAAY,WACZrB,MAAO7B,EACPmD,SAzEiB,SAACJ,GAAD,OAAOX,EAAYW,EAAEK,OAAOvB,UA2E/C,4BAAQ3D,KAAK,UAAb,WAEF,4BAAQmF,QAlEW,WACrBhC,EACGC,OACAgC,gBAAgBX,GAChBpC,MAAK,SAAUgD,OACfrC,OAAM,SAAUE,GAEfK,QAAQC,IAAIN,QA2Dd,qBACCiB,GACC,6BACE,0DACA,6BACA,2BACEnE,KAAK,QACLgF,YAAY,mBACZrB,MAAOU,EACPY,SAAU,SAACJ,GAAD,OAAOP,EAAuBO,EAAEK,OAAOvB,UAGnD,4BAAQwB,QAhEe,WAC7B,GAAId,EAAoBiB,OAAOP,OAAS,EAAG,CAK9B5B,EAAMC,OAEdmC,uBAAuBlB,EANC,CACzBmB,IAAK,iDACLC,iBAAiB,IAKhBpD,MAAK,SAACC,GACLkC,EACE,kDAEFF,EAAuB,IACvBvB,YAAW,WACTyB,EAAyB,MACxB,QAEJxB,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,SA8C1B,SAGJ,4BAAQkC,QAtEoB,WAC9Bf,GAAmBD,KAqEjB,qBCpBSuB,EApFA,SAACzE,GAAW,IAAD,EACY8C,qBAAWjD,GAAvCf,EADgB,EAChBA,MAAOuB,EADS,EACTA,OAAQH,EADC,EACDA,SADC,EAEE6C,mBAAS,IAFX,mBAEjBnC,EAFiB,KAEVoC,EAFU,OAGQD,mBAAS,IAHjB,mBAGjBlC,EAHiB,KAGP6D,EAHO,OAIO3B,mBAAS,IAJhB,mBAIjBjC,EAJiB,KAIJ6D,EAJI,KA0CtBnG,EAKEM,EALFN,WACAC,EAIEK,EAJFL,UACAJ,EAGES,EAHFT,UACAC,EAEEQ,EAFFR,YACAI,EACEI,EADFJ,sBAOF,OALID,GAAaC,IACfoD,YAAW,WACT5B,EJ4BoC,CACxCnB,KD9D2B,gBC+D3BC,SI9B0B,MACrB,KAGH,6BACE,sCACCR,GAAc,2CACdC,GAAa,6BAAMJ,GACnBK,GAAyB,6BAAMJ,GAChC,0BAAMqF,SA5CmB,SAACC,GAC5BA,EAAEC,iBACEjD,EAAMkD,OAAS,GAAKjD,EAASiD,OAAS,IACxCzD,EAAO,CACLG,OAAQ,SACRC,OAAQ,CACNG,QACAC,WACAC,iBAGJ4D,EAAY,IACZ1B,EAAS,IACT2B,EAAQ,OAgCN,2BACE5F,KAAK,OACL2D,MAAO5B,EACPiD,YAAY,OACZC,SApDoB,SAACJ,GAC3Be,EAAQf,EAAEK,OAAOvB,UAqDb,2BACE3D,KAAK,QACL2D,MAAO9B,EACPmD,YAAY,QACZC,SAhEqB,SAACJ,GAC5BZ,EAASY,EAAEK,OAAOvB,UAiEd,2BACE3D,KAAK,WACL2D,MAAO7B,EACPkD,YAAY,WACZC,SAnEwB,SAACJ,GAC/Bc,EAAYd,EAAEK,OAAOvB,UAoEjB,4BAAQ3D,KAAK,UAAb,a,QClEKX,EAAe,CAC1BwG,MAAO,GACPC,QAAQ,EACR5C,OAAO,EACPI,aAAc,GACdyC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,GAAI,IAENC,UAAW,IAqEErG,EAlEK,WAA8C,IAA7CC,EAA4C,uDAApCV,EAAoC,yCAApBW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjD,OAAQD,GACN,IN9BqB,YM+BnB,OAAO,2BACFD,GADL,IAEE8F,MAAM,GAAD,mBAAM9F,EAAM8F,OAAZ,CAAmB5F,MAE5B,INlCwB,eMmCtB,OAAO,2BACFF,GADL,IAEE8F,MAAO9F,EAAM8F,MAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKH,KAAOjG,OAEpD,INlCkC,yBMmChC,OAAO,2BACFF,GADL,IAEE8F,MAAO5F,IAEX,IN3CuB,cM4CrB,OAAO,2BACFF,GADL,IAEE+F,QAAQ,IAEZ,IN/CyB,gBMgDvB,OAAO,2BACF/F,GADL,IAEE+F,QAAQ,IAEZ,INnDsB,aMoDpB,OAAO,2BACF/F,GADL,IAEEmD,OAAO,EACPI,aAAcrD,IAElB,INxDsB,aMyDpB,OAAO,2BACFF,GADL,IAEEmD,OAAO,EACPI,aAAc,KAOlB,IN/D2B,kBMgEzB,OAAO,2BACFvD,GADL,IAEEgG,UAAW9F,IAEf,INlEuC,8BMmErC,IAAI4F,EAAQ9F,EAAM8F,MAElB,OADAA,EAAM5F,EAAQqG,OAASrG,EAChB,2BACFF,GADL,IAEE8F,UAEJ,INvE6B,oBMwE3B,OAAO,2BACF9F,GADL,IAEEoG,UAAWlG,IAEf,QACE,OAAOF,ICxFAwG,EAAkBxF,0BAgBhByF,EAdgB,SAACvF,GAAU,MCQf,WAAO,IAAD,EACLC,qBAAWpB,EAAaT,GADnB,mBACxBU,EADwB,KACjBoB,EADiB,KA4G/B,MAAO,CAACpB,EAzGUwB,uBAAY,WAA2C,IAAD,yDAAP,GAAO,IAAvCE,cAAuC,MAA9B,MAA8B,MAAvBC,cAAuB,MAAd,GAAc,EAClEqE,EAAY,GAgFhB,GA9Ee,QAAXtE,GACFO,MAAM,qFAAD,OACkFyE,aAAaC,QAChG,YAGDrE,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACnC,GACDA,GACFyG,OAAOC,QAAQ1G,GAAM2G,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXnD,EAAW,KAC7CoC,EAAUpC,EAAM2C,OAAhB,aAA2BJ,GAAIY,GAAQnD,MAI3CxC,EAASZ,EAAoBwF,OAE9B/C,OAAM,YAAiB,EAAd7C,WAKC,SAAXsB,GACFO,MAAM,2DAA4D,CAChEP,OAAQ,OACRQ,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUV,KAEpBW,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACnC,GACLiB,EAASf,EAAe,2BAAKsB,GAAN,IAAcwE,GAAIhG,EAAK6G,YAE/C/D,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,MAEjB,WAAXxB,GACFO,MAAM,2DAA4D,CAChEP,OAAQ,MACRQ,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUV,EAAOsF,OAE3B3E,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACnC,GACLiB,EAASb,EAAkBoB,EAAOwE,QAEnClD,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,MAGjB,WAAXxB,GACFO,MAAM,uDAAD,OACoDN,EAAOwE,GAD3D,UAEH,CACEzE,OAAQ,QACRQ,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUV,EAAOxB,QAG7BmC,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACnC,GACLiB,EAASV,EAAkBP,IAC3BiB,EAAST,EAAgB,KACzBS,EACEX,EAAc,CACZ0F,GAAI,GACJD,MAAO,GACPD,OAAQ,GACRM,MAAO,GACPW,OAAQ,SAIbjE,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,MAGjB,QAAXxB,EAAkB,CACpB,IAAIsE,EAAY,GAChB/D,MAAM,2DAA4D,CAChEP,OAAQ,MACRQ,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUV,KAEpBW,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACnC,GACDA,GACFyG,OAAOC,QAAQ1G,GAAM2G,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXnD,EAAW,KAC7CoC,EAAUpC,EAAM2C,OAAhB,aAA2BJ,GAAIY,GAAQnD,MAI3CxC,EAASZ,EAAoBwF,OAE9B/C,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,MAGhC,OAAO,kBAAMM,QAAQC,IAAI,uBACxB,IACuBrC,GDlHW+F,GAFG,mBAEjCnH,EAFiC,KAE1BoH,EAF0B,KAEfhG,EAFe,KAOxC,OAJAiG,qBAAU,WAER,OADAD,IACO,kBAAM5D,QAAQC,IAAI,uBACxB,CAAC2D,IAEF,kBAACZ,EAAgB7C,SAAjB,CAA0BC,MAAO,CAAE5D,QAAOoH,YAAWhG,aAClDF,EAAM2C,W,QEqOEyD,MA/Kf,SAAkBpG,GAAQ,IAAD,SACgB8C,qBAAWwC,GAA1CxG,EADe,EACfA,MAAOoH,EADQ,EACRA,UAAWhG,EADH,EACGA,SADH,EAEQ6C,mBAAS,IAFjB,mBAEhBsD,EAFgB,KAENC,EAFM,KAIjBC,EAAuBC,iBAAO,MAC9BC,EAAwBD,iBAAO,MAErC,SAASE,EAAcC,EAAS/C,GAC9BA,EAAEgD,kBAEFN,EAAWK,GACX7E,YAAW,WACLyE,EAAqBM,SACvBN,EAAqBM,QAAQC,WAGjC5G,EAASX,EAAcoH,IACvBzG,EAAST,EAAgBkH,EAAQ1B,KAGnC,IAAM8B,EAAuB,SAACnD,GAC5B1D,EAASX,EAAc,2BAAKT,EAAMgG,WAAZ,IAAuBE,MAAOpB,EAAEK,OAAOvB,WAEzDsE,EAAwB,SAACpD,GAC7B1D,EAASX,EAAc,2BAAKT,EAAMgG,WAAZ,IAAuBC,OAAQnB,EAAEK,OAAOvB,WAG1DuE,EAAe,SAACrD,GACN,UAAVA,EAAEiC,KACJY,EAAsBI,QAAQC,SAG5BI,EAAgB,SAACtD,GACP,UAAVA,EAAEiC,KAEF/G,EAAMgG,UAAUE,MAAMlB,OAAS,GAC/BhF,EAAMgG,UAAUC,OAAOjB,OAAS,IAG9BuC,EAASrB,QAAUlG,EAAMgG,UAAUE,OACnCqB,EAAStB,SAAWjG,EAAMgG,UAAUC,QAEpCmB,EAAU,CACR1F,OAAQ,SACRC,OAAQ,CAAEwE,GAAInG,EAAMgG,UAAUG,GAAIhG,KAAMH,EAAMgG,eA8BxD,SAASqC,EAAT,EAA4DvD,GAAI,IAA/BqB,EAA8B,EAA9BA,GAAWmC,EAAmB,EAA1B/B,MAG/BgC,EAFcnG,KAAKoG,MAAMpG,KAAKC,UAAUrC,EAAM8F,QAE1B2C,QAAO,SAACC,EAAaX,EAASxB,GAOpD,OANIwB,EAAQ5B,KAAOA,IACjBuC,EAAYX,EAAQ5B,IAAM4B,EACtBA,EAAQxB,MAAQ+B,IAClBI,EAAYX,EAAQ5B,IAApB,MAAmCI,EAAQ,IAGxCmC,IACN,IAEHtB,EAAU,CAAE1F,OAAQ,SAAUC,OAAQ,CAAEsF,IAAKsB,EAASpC,QAExD,OACE,yBAAKwC,UAAU,aACZ3I,EAAM8F,MAAMd,OAAS,EACpB,kBAAC,IAAD,CAAiB4D,UA1CvB,SAAmBtD,GAEjB,GAAKA,EAAOuD,aAGRvD,EAAOuD,YAAYtC,QAAUjB,EAAOwD,OAAOvC,MAA/C,CAIA,IAAMwC,EAvFM,SAACC,EAAMC,EAAYC,GACjC,IAAM5D,EAAS6D,MAAMC,KAAKJ,GADoB,EAE5B1D,EAAO+D,OAAOJ,EAAY,GAArCK,EAFuC,oBAM9C,OAFAhE,EAAO+D,OAAOH,EAAU,EAAGI,GAEpBhE,EAiFSiE,CACZvJ,EAAM8F,MACNR,EAAOwD,OAAOvC,MACdjB,EAAOuD,YAAYtC,OAErBnF,EAASZ,EAAoBuI,IAE7B,IADA,IAAI9B,EAAM,GACDuC,EAAI,EAAGA,GAAKT,EAAM/D,OAAS,EAAGwE,IACrCT,EAAMS,GAAGjD,MAAQiD,EACjBvC,EAAI8B,EAAMS,GAAGrD,IAAM4C,EAAMS,GAG3BpC,EAAU,CAAE1F,OAAQ,MAAOC,OAAQsF,OAsB7B,kBAAC,IAAD,CAAWwC,YAAY,cACpB,SAACC,EAAUC,GAAX,OACC,wCACMD,EAASE,eADf,CAEEC,IAAKH,EAASI,SACdC,OAxGMC,EAwGcL,EAASK,eAxGH,CACxCC,WAAYD,EAAiB,YAAc,YAC3CE,QAhBW,EAiBXC,MAAO,QAuGQnK,EAAM8F,MAAMsE,KAAI,WAAgC7D,GAAhC,IAAGJ,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OAAQiB,EAAtB,EAAsBA,OAAtB,OACf,kBAAC,IAAD,CAAWH,IAAKZ,EAAIkE,YAAalE,EAAII,MAAOA,IACzC,SAACmD,EAAUC,GAAX,OACC,sCACEE,IAAKH,EAASI,UACVJ,EAASY,eACTZ,EAASa,gBAHf,CAIER,OA7HFS,EA8HIb,EAASa,WA9HDC,EA+HRf,EAASY,eAAeP,MA/H7B,aAEnBW,WAAY,OACZR,QAASS,GACTC,OAAO,OAAD,OANK,EAML,QAGNX,WAAYO,EAAa,aAAe,QAGrCC,MAwHmB,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,SACX3I,EAAMoG,YAAcD,GACpB,2BACEwC,UAAU,aACV1I,KAAK,OACL4J,IAAKpC,EACL7D,MAAO5D,EAAMgG,UAAUE,MACvBhB,SAAU+C,EACV4C,UAAW1C,KAGbjC,GAEJ,yBAAKyC,UAAU,UACX3I,EAAMoG,YAAcD,GACpB,2BACElG,KAAK,OACL4J,IAAKlC,EACL/D,MAAO5D,EAAMgG,UAAUC,OACvBf,SAAUgD,EACV2C,UAAWzC,KAGbnC,IAGN,4BACEb,QAASwC,EAAckD,KAAK,EAAM,CAChC3E,KACAD,QACAD,SACAM,QACAW,YANJ,UAWA,4BACE9B,QAASiD,EAAsByC,KAAK,EAAM,CACxC3E,KACAI,UAEFoC,UAAU,cALZ,KAQU,KAhLb,IAAC6B,EAAYC,QAqLjBf,EAASzE,aAzKL,IAAC+E,MA+Kd,iDCnJOe,EA5EM,WAAO,IAAD,EACI/G,qBAAWwC,GAAhCxG,EADiB,EACjBA,MAAOoH,EADU,EACVA,UACA4D,EAAchH,qBAAWjD,GAAhCf,MAFiB,EAGCiE,mBAAS,IAHV,mBAGlBiC,EAHkB,KAGX+E,EAHW,OAIGhH,mBAAS,IAJZ,mBAIlBgC,EAJkB,KAIViF,EAJU,KAKnBC,EAAiBzD,iBAAO,MACxB0D,EAAkB1D,iBAAO,MACzB2D,EAAY3D,iBAAO,MAEzBL,qBAAU,WACR8D,EAAepD,QAAQC,UACtB,CAAChI,EAAM8F,QAEV,IAAMwF,EAAoB,SAACxG,GACzBA,EAAEC,iBACF,IAAIwG,EAAW,YAAOvL,EAAM8F,OACxByF,EAAYvG,OAAS,EACvBoC,EAAU,CACR1F,OAAQ,OACRC,OAAQ,CACNuE,QACAD,SACAM,MAAOgF,EAAYvG,OAAS,EAAI,EAChCkC,OAAQ8D,EAAUvL,SAASoD,WAI/BuE,EAAU,CACR1F,OAAQ,OACRC,OAAQ,CAAEuE,QAAOD,SAAQM,MAAO,EAAGW,OAAQ8D,EAAUvL,SAASoD,WAGlEoI,EAAS,IACTC,EAAU,KAgBZ,OACE,0BAAMrG,SAAUyG,GACd,2BACEtE,KAAK,WACL/B,YAAY,mBACZrB,MAAOsC,EACP2D,IAAKsB,EACLjG,SAAU,SAACJ,GAAD,OAAOmG,EAASnG,EAAEK,OAAOvB,QACnCiH,UAtBN,SAA2B/F,GACX,UAAVA,EAAEiC,KACJqE,EAAgBrD,QAAQC,SAqBtBwD,UAAQ,IAEV,2BACExE,KAAK,aACL/B,YAAY,oBACZ4E,IAAKuB,EACLlG,SAAU,SAACJ,GAAD,OAAOoG,EAAUpG,EAAEK,OAAOvB,QACpCA,MAAOqC,EACP4E,UA1BN,SAA4B/F,GACZ,UAAVA,EAAEiC,KACJsE,EAAUtD,QAAQC,SAyBhBwD,UAAQ,IAEV,4BAAQvL,KAAK,SAAS4K,UAxB1B,SAA4B/F,GAC1BwG,EAAkBxG,IAuBqC+E,IAAKwB,GAA1D,YCnESI,MAVf,SAAkBvK,GAChB,OACE,kBAACwK,EAAD,KACGxK,EAAMlB,MAAMF,cAAgB,mDAC7B,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCQS6L,EAdG,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC/C9L,EAAUgE,qBAAWjD,GAArBf,MACR,OACE,kBAAC,IAAD,iBACM8L,EADN,CAEEC,OAAQ,SAAC7K,GAAD,OACLlB,EAAMH,iBAAmB,kBAAC+L,EAAD,iBAAe1K,EAAf,CAAsBlB,MAAOA,MACrD,kBAAC,IAAD,CAAUgM,GAAI,CAAEjJ,SAAU,iB,QCyErBkJ,MAxCf,SAAgB/K,GAAQ,IAAD,EACO8C,qBAAWjD,GAA/Bf,EADa,EACbA,MAAOoB,EADM,EACNA,SAgBf,OACE,4BACE,4BACE,kBAAC,IAAD,CAAM4K,GAAG,KAAT,UAGI,OAALhM,QAAK,IAALA,OAAA,EAAAA,EAAOH,iBAAkB,KACxB,4BACE,kBAAC,IAAD,CAAMmM,GAAG,SAAT,UAGJ,6BACQ,OAALhM,QAAK,IAALA,OAAA,EAAAA,EAAOH,iBACN,4BAAQI,KAAK,SAASmF,QA5Bb,WACfhE,EZuC6B,CAC/BnB,KDlEyB,gBa2BvByG,aAAawF,WAAW,SACxBxF,aAAawF,WAAW,UACxB9I,EACGC,OACA8I,UACA7J,MAAK,eAGLW,OAAM,SAAUE,GAEfK,QAAQC,IAAIN,QAgBV,UAIA,kBAAC,IAAD,CAAM6I,GAAG,UAAT,aC5DG5I,EAAQuB,IAASyH,cAAc,CAC1CC,OAAQxK,0CACRyK,WAAYzK,2CAsDC0K,MAnDf,WAAgB,IACNnL,EAAa4C,qBAAWjD,GAAxBK,SACFC,EAAUC,cAFH,EAGe2C,oBAAS,GAHxB,mBAGN8B,EAHM,KAGEyG,EAHF,KAiCb,OA7BAnF,qBAAU,WA2BR,OA1BAjE,EAAMC,OAAOoJ,oBAAmB,SAAUC,GACxCF,GAAU,GACNE,GACFtL,EAASN,GAAU,IAEnB4F,aAAaiG,QAAQ,SAAUvK,KAAKC,UAAUqK,EAAKE,MAEnDxL,EACER,EAAmB,CACjBT,KAAM,CACJ0C,QAAST,KAAKoG,MAAM9B,aAAaC,QAAQ,YAE3CvG,QAAS,MAGbiB,EAAQwL,QAAQ,eAEhBzL,EbyCyB,CAC/BnB,KDlEyB,gBcyBnByG,aAAawF,WAAW,SACxBxF,aAAawF,WAAW,UACxB7K,EAAQwL,QAAQ,cAMb,kBAAMrJ,QAAQC,IAAI,gBACxB,CAACrC,EAAUC,IAEZ,yBAAKsH,UAAU,OACX5C,GAAU,4CACV,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,KAAK,SAASjB,UAAW9H,IAChC,kBAAC,IAAD,CAAO+I,KAAK,UAAUjB,UAAWlG,IACjC,kBAAC,EAAD,CAAcmH,KAAK,YAAYjB,UAAWJ,IAC1C,kBAAC,IAAD,CAAOqB,KAAK,IAAIC,OAAK,EAAClB,UAAW/H,IACjC,kBAAC,IAAD,CAAUkI,GAAG,UC5DnBgB,G,MACJ,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,SAINC,IAASnB,OAAOiB,EAAOG,SAASC,eAAe,W","file":"static/js/main.aaf9aa98.chunk.js","sourcesContent":["import {\n  AUTH_STARTED,\n  AUTH_REQUEST_SUCCESS,\n  AUTH_REQUEST_FAIL,\n  RESET_LOADERS,\n  REMOVE_LOADER,\n  AUTH_LOGOUT,\n  CHECKAUTH,\n  FRESHEDLOGIN,\n} from \"../Actions/actionTypes\";\n\nexport const initialState = {\n  authError: \"\",\n  authMessage: \"\",\n  authData: {},\n  showLoader: false,\n  showError: false,\n  successedNotification: false,\n  isAuthenticated: false,\n  freshedLogin: false,\n};\nconst rootReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case AUTH_STARTED:\n      return {\n        ...state,\n        showLoader: true,\n      };\n\n    case AUTH_REQUEST_SUCCESS:\n      return {\n        ...state,\n        authData: payload.data || {},\n        authMessage: payload.message,\n        successedNotification: true,\n        showLoader: false,\n      };\n    case AUTH_REQUEST_FAIL:\n      return {\n        ...state,\n        authError: payload.message,\n        showError: payload.showError,\n      };\n    case RESET_LOADERS:\n      if (state.showError) {\n        return {\n          ...state,\n          showError: payload,\n          showLoader: false,\n        };\n      }\n      if (state.successedNotification) {\n        return {\n          ...state,\n          successedNotification: payload,\n          showLoader: false,\n        };\n      }\n      break;\n    case REMOVE_LOADER:\n      return {\n        ...state,\n        showLoader: false,\n      };\n    case AUTH_LOGOUT:\n      return {\n        authError: \"\",\n        authMessage: \"\",\n        authData: {},\n        showLoader: false,\n        showError: false,\n        successedNotification: false,\n        isAuthenticated: false,\n      };\n    case CHECKAUTH:\n      return {\n        ...state,\n        isAuthenticated: payload,\n      };\n    case FRESHEDLOGIN:\n      return {\n        ...state,\n        freshedLogin: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","export const ADD_BOOKS = \"ADD_BOOKS\";\nexport const REMOVE_BOOKS = \"REMOVE_BOOKS\";\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const REMOVE_LOADER = \"REMOVE_LOADER\";\nexport const SHOW_ERROR = \"SHOW_ERROR\";\nexport const HIDE_ERROR = \"HIDE_ERROR\";\nexport const FETCH_BOOKLIST_SUCCESS = \"FETCH_BOOKLIST_SUCCESS\";\n\nexport const SET_INPUT_AUTHOR = \"SET_INPUT_AUTHOR\";\nexport const SET_INPUT_TITLE = \"SET_INPUT_TITLE\";\n\nexport const GET_SINGLE_BOOKLIST_SUCCESS = \"GET_SINGLE_BOOKLIST_SUCCESS\";\n\nexport const SET_UPDATE_INPUTS = \"SET_UPDATE_INPUTS\";\n\n// ACTION TYPES FOR THE LOGIN AND SIGNUP\n\nexport const AUTH_STARTED = \"AUTH_STARTED\";\nexport const AUTH_REQUEST_SUCCESS = \"AUTH_REQUEST_SUCCESS\";\nexport const AUTH_REQUEST_FAIL = \"AUTH_REQUEST_FAIL\";\nexport const RESET_LOADERS = \"RESET_LOADERS\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const CHECKAUTH = \"CHECKAUTH\";\nexport const FRESHEDLOGIN = \"FRESHEDLOGIN\";\n","import {\n  ADD_BOOKS,\n  REMOVE_BOOKS,\n  SHOW_ERROR,\n  SHOW_LOADER,\n  HIDE_ERROR,\n  REMOVE_LOADER,\n  FETCH_BOOKLIST_SUCCESS,\n  SET_INPUT_TITLE,\n  GET_SINGLE_BOOKLIST_SUCCESS,\n  SET_UPDATE_INPUTS,\n  AUTH_STARTED,\n  AUTH_REQUEST_SUCCESS,\n  AUTH_REQUEST_FAIL,\n  RESET_LOADERS,\n  AUTH_LOGOUT,\n  CHECKAUTH,\n  FRESHEDLOGIN,\n} from \"./actionTypes\";\n\nexport const addBooksAction = (response) => ({\n  type: ADD_BOOKS,\n  payload: response,\n});\n\nexport const removeBooksAction = (response) => ({\n  type: REMOVE_BOOKS,\n  payload: response,\n});\n\nexport const showLoaderAction = () => ({ type: SHOW_LOADER });\n\nexport const removeLoaderAction = () => ({ type: REMOVE_LOADER });\n\nexport const showErrorAction = (response) => ({\n  type: SHOW_ERROR,\n  payload: response,\n});\n\nexport const removeErrorAction = () => ({ type: HIDE_ERROR });\n\nexport const fetchBooklistSucces = (response) => ({\n  type: FETCH_BOOKLIST_SUCCESS,\n  payload: response,\n});\n\nexport const setInputTitle = (response) => ({\n  type: SET_INPUT_TITLE,\n  payload: response,\n});\n\n// export const setInputAuthor = (response) => ({\n//   type: SET_INPUT_AUTHOR,\n//   payload: response,\n// });\n\nexport const getSingleBooklist = (response) => ({\n  type: GET_SINGLE_BOOKLIST_SUCCESS,\n  payload: response,\n});\nexport const setUpdateInputs = (response) => ({\n  type: SET_UPDATE_INPUTS,\n  payload: response,\n});\n\n// ACTION METHODS FOR THE AUTH\n\nexport const authStarted = () => ({\n  type: AUTH_STARTED,\n});\n\nexport const authRequestSuccess = (response) => ({\n  type: AUTH_REQUEST_SUCCESS,\n  payload: response,\n});\n\nexport const authFails = (payload) => ({\n  type: AUTH_REQUEST_FAIL,\n  payload,\n});\n\nexport const resetLoaders = (payload) => ({\n  type: RESET_LOADERS,\n  payload,\n});\n\nexport const authLogout = () => ({\n  type: AUTH_LOGOUT,\n});\n\nexport const checkAuth = (response) => {\n  return {\n    type: CHECKAUTH,\n    payload: response || false,\n  };\n};\n\nexport const freshedLogin = (response) => ({\n  type: FRESHEDLOGIN,\n  payload: response || false,\n});\n","import React, { createContext, useCallback, useReducer } from \"react\";\nimport rootReducer, { initialState } from \"../Reducer/AuthReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  authRequestSuccess,\n  authFails,\n  authStarted,\n  removeLoaderAction,\n  checkAuth,\n  freshedLogin,\n} from \"../Actions/bookListActions\";\nimport { myApp } from \"../App\";\nexport const AuthContext = createContext();\n\nconst useAuth = () => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  const history = useHistory();\n  const onAuth = useCallback(\n    async ({ method, params = {} }) => {\n      if (method === \"SIGNUP\") {\n        let baseUrl = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_API_KEY}`;\n        let payload = {\n          email: params.email,\n          password: params.password,\n          displayName: params.displayName,\n        };\n\n        if (method === \"SIGNIN\") {\n          baseUrl = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_API_KEY}`;\n          payload = {\n            email: params.email,\n            password: params.password,\n          };\n        }\n\n        dispatch(authStarted());\n\n        fetch(baseUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n          },\n          body: JSON.stringify(payload),\n        })\n          .then((res) => {\n            if (res.ok) {\n              return res.json();\n            } else {\n              return Promise.reject(res);\n            }\n          })\n          .then((data) => {\n            dispatch(removeLoaderAction());\n            if (method === \"SIGNIN\") {\n              dispatch(\n                authRequestSuccess({\n                  data: { idToken: data.idToken, localId: data.localId },\n                  message: \"Login successfull\",\n                })\n              );\n              dispatch(checkAuth(true));\n              dispatch(freshedLogin(true));\n\n              history.push({\n                pathname: \"/booklist\",\n                state: state,\n              });\n              setTimeout(() => {\n                dispatch(freshedLogin(false));\n              }, 5000);\n            }\n            dispatch(\n              authRequestSuccess({\n                message: \"user created successfully please login\",\n              })\n            );\n\n            // setTimeout(() => {\n            //   dispatch(authLogout({}));\n            // }, exp);\n          })\n          .catch(async (err) => {\n            let {\n              error: { message },\n            } = await err.json();\n            dispatch(removeLoaderAction());\n            dispatch(authFails({ message: message, showError: true }));\n          });\n      }\n      if (method === \"SIGNIN\") {\n        dispatch(authStarted());\n\n        myApp\n          .auth()\n          .signInWithEmailAndPassword(params.email, params.password)\n          .then((res) => {\n            dispatch(removeLoaderAction());\n\n            dispatch(checkAuth(true));\n            dispatch(freshedLogin(true));\n\n            setTimeout(() => {\n              dispatch(freshedLogin(false));\n            }, 5000);\n          })\n          .catch(function (error) {\n            // Handle Errors here.\n            var errorMessage = error.message;\n            dispatch(removeLoaderAction());\n            dispatch(authFails({ message: errorMessage, showError: true }));\n            // ...\n          });\n      }\n\n      return () => console.log(\"PLease wipe the auth function\");\n    },\n    [state, history]\n  );\n  return [state, onAuth, dispatch];\n};\n\nfunction AuthContextProvider(props) {\n  const [state, onAuth, dispatch] = useAuth();\n  return (\n    <AuthContext.Provider value={{ state, onAuth, dispatch }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContextProvider;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Booklist pro</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport firebase from \"firebase/app\";\nimport { myApp } from \"../App\";\n\nconst Login = () => {\n  const { state, onAuth } = useContext(AuthContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [forgotPassword, setForgotPassword] = useState(false);\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState(\"\");\n  const [forgotPasswordMessage, setForgotPasswordMessage] = useState(\"\");\n\n  const onChangeEmail = (e) => setEmail(e.target.value);\n  const onChangePassword = (e) => setPassword(e.target.value);\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (email.length > 0 && password.length > 0) {\n      onAuth({\n        method: \"SIGNIN\",\n        params: { email, password },\n      });\n    }\n  };\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const onOauthHandler = () => {\n    myApp\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {})\n      .catch(function (error) {\n        // Handle Errors here.\n        console.log(error);\n        // ...\n      });\n  };\n  const onForgetPasswordHandler = () => {\n    setForgotPassword(!forgotPassword);\n  };\n  const sendResetPasswordEmail = () => {\n    if (forgotPasswordEmail.trim().length > 0) {\n      const actionCodeSettings = {\n        url: \"https://utkarsh4321.github.io/Booklist/#/login\",\n        handleCodeInApp: false,\n      };\n      let auth = myApp.auth();\n      auth\n        .sendPasswordResetEmail(forgotPasswordEmail, actionCodeSettings)\n        .then((res) => {\n          setForgotPasswordMessage(\n            \"Email send successfully to reset your password\"\n          );\n          setForgotPasswordEmail(\"\");\n          setTimeout(() => {\n            setForgotPasswordMessage(\"\");\n          }, 3000);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const {\n    showLoader,\n    showError,\n    authError,\n    authMessage,\n    successedNotification,\n  } = state;\n\n  return (\n    <div>\n      <h3>Login</h3>\n      {showLoader && <div>Loading...</div>}\n      {showError && <div>{authError}</div>}\n      {successedNotification && <div>{authMessage}</div>}\n      {forgotPasswordMessage}\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={onChangeEmail}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChangePassword}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <button onClick={onOauthHandler}>Login with google</button>\n      {forgotPassword && (\n        <div>\n          <label>Email to reset Password</label>\n          <br />\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={forgotPasswordEmail}\n            onChange={(e) => setForgotPasswordEmail(e.target.value)}\n          />\n\n          <button onClick={sendResetPasswordEmail}>Send</button>\n        </div>\n      )}\n      <button onClick={onForgetPasswordHandler}>Forget Password</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { resetLoaders } from \"../Actions/bookListActions\";\nconst Signup = (props) => {\n  const { state, onAuth, dispatch } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPasswrod] = useState(\"\");\n  const [displayName, setName] = useState(\"\");\n\n  const onChangeEmailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const onChangePasswordHandler = (e) => {\n    setPasswrod(e.target.value);\n  };\n  const onChangeDisplayName = (e) => {\n    setName(e.target.value);\n  };\n  const onFormSunbmitHandler = (e) => {\n    e.preventDefault();\n    if (email.length > 0 && password.length > 0) {\n      onAuth({\n        method: \"SIGNUP\",\n        params: {\n          email,\n          password,\n          displayName,\n        },\n      });\n      setPasswrod(\"\");\n      setEmail(\"\");\n      setName(\"\");\n      // defaultProject\n      //   .auth()\n      //   .createUserWithEmailAndPassword(email, password)\n      //   .then((res) => {\n      //     console.log(res);\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n    }\n  };\n  // const arr = Hii how are you madra`;\n  const {\n    showLoader,\n    showError,\n    authError,\n    authMessage,\n    successedNotification,\n  } = state;\n  if (showError || successedNotification) {\n    setTimeout(() => {\n      dispatch(resetLoaders(false));\n    }, 3000);\n  }\n  return (\n    <div>\n      <h3>signup</h3>\n      {showLoader && <div>Loading...</div>}\n      {showError && <div>{authError}</div>}\n      {successedNotification && <div>{authMessage}</div>}\n      <form onSubmit={onFormSunbmitHandler}>\n        <input\n          type=\"text\"\n          value={displayName}\n          placeholder=\"Name\"\n          onChange={onChangeDisplayName}\n        />\n        <input\n          type=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={onChangeEmailHandler}\n        />\n        <input\n          type=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={onChangePasswordHandler}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","//  Initialize the state\n\nimport {\n  ADD_BOOKS,\n  REMOVE_BOOKS,\n  FETCH_BOOKLIST_SUCCESS,\n  SHOW_LOADER,\n  REMOVE_LOADER,\n  SHOW_ERROR,\n  HIDE_ERROR,\n  SET_INPUT_TITLE,\n  GET_SINGLE_BOOKLIST_SUCCESS,\n  SET_UPDATE_INPUTS,\n} from \"../Actions/actionTypes\";\n\nexport const initialState = {\n  books: [],\n  loader: false,\n  error: false,\n  errorMessage: \"\",\n  booksData: {\n    author: \"\",\n    title: \"\",\n    id: \"\",\n  },\n  updatedId: \"\",\n};\n\nconst rootReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_BOOKS:\n      return {\n        ...state,\n        books: [...state.books, payload],\n      };\n    case REMOVE_BOOKS:\n      return {\n        ...state,\n        books: state.books.filter((item) => item.id !== payload),\n      };\n    case FETCH_BOOKLIST_SUCCESS:\n      return {\n        ...state,\n        books: payload,\n      };\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loader: true,\n      };\n    case REMOVE_LOADER:\n      return {\n        ...state,\n        loader: false,\n      };\n    case SHOW_ERROR:\n      return {\n        ...state,\n        error: true,\n        errorMessage: payload,\n      };\n    case HIDE_ERROR:\n      return {\n        ...state,\n        error: false,\n        errorMessage: \"\",\n      };\n    // case SET_INPUT_AUTHOR:\n    //   return {\n    //     ...state,\n    //     booksData: payload,\n    //   };\n    case SET_INPUT_TITLE:\n      return {\n        ...state,\n        booksData: payload,\n      };\n    case GET_SINGLE_BOOKLIST_SUCCESS:\n      let books = state.books;\n      books[payload.index] = payload;\n      return {\n        ...state,\n        books,\n      };\n    case SET_UPDATE_INPUTS:\n      return {\n        ...state,\n        updatedId: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import React, { createContext, useEffect } from \"react\";\nimport { useGetTodos } from \"../CostumHooks/useRestApi\";\nexport const BookListContext = createContext();\n\nconst BookListContextProvide = (props) => {\n  // const [state, dispatch] = useReducer(reducer, InitialState);\n  const [state, fetchData, dispatch] = useGetTodos();\n  useEffect(() => {\n    fetchData();\n    return () => console.log(\"Please remove me\");\n  }, [fetchData]);\n  return (\n    <BookListContext.Provider value={{ state, fetchData, dispatch }}>\n      {props.children}\n    </BookListContext.Provider>\n  );\n};\n\nexport default BookListContextProvide;\n","import { useCallback, useReducer } from \"react\";\nimport rootReducer, { initialState } from \"../Reducer/BooklistReducer\";\nimport {\n  fetchBooklistSucces,\n  addBooksAction,\n  removeBooksAction,\n  getSingleBooklist,\n  setUpdateInputs,\n  setInputTitle,\n} from \"../Actions/bookListActions\";\n// Creating the MY custum hooks\n\nexport const useGetTodos = () => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n\n  const fetchData = useCallback(({ method = \"GET\", params = {} } = {}) => {\n    let booksData = [];\n    // localStorage.todo = JSON.stringify(state.books);\n    if (method === \"GET\") {\n      fetch(\n        `https://booklist-project-32f2a.firebaseio.com/todos.json?orderBy=\"userId\"&equalTo=${localStorage.getItem(\n          \"userId\"\n        )}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data) {\n            Object.entries(data).forEach(([key, value]) => {\n              booksData[value.index] = { id: key, ...value };\n            });\n          }\n\n          dispatch(fetchBooklistSucces(booksData));\n        })\n        .catch(({ message }) => {\n          // console.log(message);\n        });\n    }\n\n    if (method === \"POST\") {\n      fetch(\"https://booklist-project-32f2a.firebaseio.com/todos.json\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch(addBooksAction({ ...params, id: data.name }));\n        })\n        .catch((err) => console.log(err));\n    }\n    if (method === \"DELETE\") {\n      fetch(`https://booklist-project-32f2a.firebaseio.com/todos.json`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(params.obj),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch(removeBooksAction(params.id));\n        })\n        .catch((err) => console.log(err));\n    }\n    // METHOD for the update\n    if (method === \"UPDATE\") {\n      fetch(\n        `https://booklist-project-32f2a.firebaseio.com/todos/${params.id}/.json`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n          },\n          body: JSON.stringify(params.data),\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch(getSingleBooklist(data));\n          dispatch(setUpdateInputs(\"\"));\n          dispatch(\n            setInputTitle({\n              id: \"\",\n              title: \"\",\n              author: \"\",\n              index: \"\",\n              userId: \"\",\n            })\n          );\n        })\n        .catch((err) => console.log(err));\n    }\n    // Get the single element\n    if (method === \"PUT\") {\n      let booksData = [];\n      fetch(`https://booklist-project-32f2a.firebaseio.com/todos.json`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data) {\n            Object.entries(data).forEach(([key, value]) => {\n              booksData[value.index] = { id: key, ...value };\n            });\n          }\n\n          dispatch(fetchBooklistSucces(booksData));\n        })\n        .catch((err) => console.log(err));\n    }\n\n    return () => console.log(\"Just wipe me out\");\n  }, []);\n  return [state, fetchData, dispatch];\n};\n","import React, { useContext, useState, useRef } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\nimport {\n  setUpdateInputs,\n  setInputTitle,\n  fetchBooklistSucces,\n} from \"../Actions/bookListActions\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n// import { AuthContext } from \"../Context/AuthContext\";\n\n// class Booklist extends Component {\n//   static contextType = ThemeContext;\n\n//   render() {\n//     const { isLight, dark, light } = this.context;\n//     const theme = isLight ? light : dark;\n\n//     return (\n//       <div\n//         className=\"book-list\"\n//         style={{ background: theme.bg, color: theme.tc }}\n//       >\n//         <ul>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Think like a monk\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Three Mistakes of my life\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Dhoni the untold story\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Booklist;\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n});\n\nfunction Booklist(props) {\n  const { state, fetchData, dispatch } = useContext(BookListContext);\n  const [bookItem, setUpdates] = useState({});\n\n  const bookUpdateTitleInput = useRef(null);\n  const bookUpdateAuthorInput = useRef(null);\n\n  function updateHandler(bookObj, e) {\n    e.stopPropagation();\n\n    setUpdates(bookObj);\n    setTimeout(() => {\n      if (bookUpdateTitleInput.current) {\n        bookUpdateTitleInput.current.focus();\n      }\n    });\n    dispatch(setInputTitle(bookObj));\n    dispatch(setUpdateInputs(bookObj.id));\n  }\n\n  const onChangeTitleHandler = (e) => {\n    dispatch(setInputTitle({ ...state.booksData, title: e.target.value }));\n  };\n  const onChangeAuthorHandler = (e) => {\n    dispatch(setInputTitle({ ...state.booksData, author: e.target.value }));\n  };\n\n  const onFocusTitle = (e) => {\n    if (e.key === \"Enter\") {\n      bookUpdateAuthorInput.current.focus();\n    }\n  };\n  const onFocusAuthor = (e) => {\n    if (e.key === \"Enter\") {\n      if (\n        state.booksData.title.length > 0 &&\n        state.booksData.author.length > 0\n      ) {\n        if (\n          bookItem.title !== state.booksData.title ||\n          bookItem.author !== state.booksData.author\n        ) {\n          fetchData({\n            method: \"UPDATE\",\n            params: { id: state.booksData.id, data: state.booksData },\n          });\n        }\n      }\n    }\n  };\n  function onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const items = reorder(\n      state.books,\n      result.source.index,\n      result.destination.index\n    );\n    dispatch(fetchBooklistSucces(items));\n    let obj = {};\n    for (let i = 0; i <= items.length - 1; i++) {\n      items[i].index = i;\n      obj[items[i].id] = items[i];\n    }\n\n    fetchData({ method: \"PUT\", params: obj });\n  }\n\n  function removeBooklistHandler({ id, index: removedIndex }, e) {\n    const booksList = JSON.parse(JSON.stringify(state.books));\n\n    let newBook = booksList.reduce((accumulator, current, index) => {\n      if (current.id !== id) {\n        accumulator[current.id] = current;\n        if (current.index > removedIndex) {\n          accumulator[current.id][\"index\"] = index - 1;\n        }\n      }\n      return accumulator;\n    }, {});\n\n    fetchData({ method: \"DELETE\", params: { obj: newBook, id } });\n  }\n  return (\n    <div className=\"book-list\">\n      {state.books.length > 0 ? (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <ul\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {state.books.map(({ id, title, author, userId }, index) => (\n                  <Draggable key={id} draggableId={id} index={index}>\n                    {(provided, snapshot) => (\n                      <li\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <div className=\"content\">\n                          <div className=\"title\">\n                            {(state.updatedId === id && (\n                              <input\n                                className=\"titleInput\"\n                                type=\"text\"\n                                ref={bookUpdateTitleInput}\n                                value={state.booksData.title}\n                                onChange={onChangeTitleHandler}\n                                onKeyDown={onFocusTitle}\n                              />\n                            )) ||\n                              title}\n                          </div>\n                          <div className=\"author\">\n                            {(state.updatedId === id && (\n                              <input\n                                type=\"text\"\n                                ref={bookUpdateAuthorInput}\n                                value={state.booksData.author}\n                                onChange={onChangeAuthorHandler}\n                                onKeyDown={onFocusAuthor}\n                              />\n                            )) ||\n                              author}\n                          </div>\n                        </div>\n                        <button\n                          onClick={updateHandler.bind(this, {\n                            id,\n                            title,\n                            author,\n                            index,\n                            userId,\n                          })}\n                        >\n                          Update\n                        </button>\n                        <button\n                          onClick={removeBooklistHandler.bind(this, {\n                            id,\n                            index,\n                          })}\n                          className=\"remove_btn\"\n                        >\n                          X\n                        </button>{\" \"}\n                      </li>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n      ) : (\n        <div>No books found</div>\n      )}\n    </div>\n  );\n}\n\nexport default Booklist;\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n// class ToogleButton extends Component {\n//   static contextType = ThemeContext;\n//   render() {\n//     return <button onClick={this.context.themeToggler}>Toogle Theme</button>;\n//   }\n// }\n\n// export default ToogleButton;\n\nconst ToogleButton = () => {\n  const { state, fetchData } = useContext(BookListContext);\n  const { state: authState } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const bookTitleInput = useRef(null);\n  const bookAuthorInput = useRef(null);\n  const submitRef = useRef(null);\n\n  useEffect(() => {\n    bookTitleInput.current.focus();\n  }, [state.books]);\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    let storedBooks = [...state.books];\n    if (storedBooks.length > 0) {\n      fetchData({\n        method: \"POST\",\n        params: {\n          title,\n          author,\n          index: storedBooks.length - 1 + 1,\n          userId: authState.authData.localId,\n        },\n      });\n    } else {\n      fetchData({\n        method: \"POST\",\n        params: { title, author, index: 0, userId: authState.authData.localId },\n      });\n    }\n    setTitle(\"\");\n    setAuthor(\"\");\n  };\n  function onKeyTitleHandler(e) {\n    if (e.key === \"Enter\") {\n      bookAuthorInput.current.focus();\n    }\n  }\n  function onKeyAuthorHandler(e) {\n    if (e.key === \"Enter\") {\n      submitRef.current.focus();\n    }\n  }\n  function onKeySubmitHandler(e) {\n    formSubmitHandler(e);\n  }\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <input\n        name=\"bookName\"\n        placeholder=\"Enter book Name \"\n        value={title}\n        ref={bookTitleInput}\n        onChange={(e) => setTitle(e.target.value)}\n        onKeyDown={onKeyTitleHandler}\n        required\n      />\n      <input\n        name=\"bookAuthor\"\n        placeholder=\"Enter book Author\"\n        ref={bookAuthorInput}\n        onChange={(e) => setAuthor(e.target.value)}\n        value={author}\n        onKeyDown={onKeyAuthorHandler}\n        required\n      />\n      <button type=\"submit\" onKeyDown={onKeySubmitHandler} ref={submitRef}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default ToogleButton;\n","import React from \"react\";\nimport Booklist from \"./Booklist\";\nimport BookListContextProvide from \"../Context/BookList\";\nimport ToogleButton from \"./ToogleButton\";\n\nfunction UserList(props) {\n  return (\n    <BookListContextProvide>\n      {props.state.freshedLogin && <div>Login successfully</div>}\n      <ToogleButton />\n      <Booklist />\n    </BookListContextProvide>\n  );\n}\n\nexport default UserList;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n  const { state } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        (state.isAuthenticated && <Component {...props} state={state} />) || (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthRoute;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { authLogout } from \"../Actions/bookListActions\";\nimport { myApp } from \"../App\";\n// const CouunterContext = React.createContext(\"123\");\n\n// class Navbar extends Component {\n//   // static contextType = ThemeContext;\n\n//   render() {\n//     return (\n//       <AuthContext.Consumer>\n//         {(authContext) => (\n//           <ThemeContext.Consumer>\n//             {(themeContext) => {\n//               const { isAuthenticated, toggleAuth } = authContext;\n//               const { name, hobby, isLight, dark, light } = themeContext;\n\n//               const theme = isLight ? light : dark;\n//               return (\n//                 <div style={{ background: theme.bg, color: theme.tc }}>\n//                   <nav>\n//                     <h1>{name + \" \" + hobby}</h1>\n//                     <button onClick={toggleAuth}>\n//                       {isAuthenticated ? \"Log IN\" : \"Log out\"}\n//                     </button>\n//                     <ul>\n//                       <li>Home</li>\n//                       <li>About</li>\n//                       <li>Contact</li>\n//                     </ul>\n//                   </nav>\n//                 </div>\n//               );\n//             }}\n//           </ThemeContext.Consumer>\n//         )}\n//       </AuthContext.Consumer>\n//     );\n//   }\n// }\n\n// export default Navbar;\nfunction Navbar(props) {\n  const { state, dispatch } = useContext(AuthContext);\n  const onLogout = () => {\n    dispatch(authLogout());\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    myApp\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n  return (\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n\n      {state?.isAuthenticated ? null : (\n        <li>\n          <Link to=\"login\">Login</Link>\n        </li>\n      )}\n      <li>\n        {state?.isAuthenticated ? (\n          <button type=\"button\" onClick={onLogout}>\n            Logout\n          </button>\n        ) : (\n          <Link to=\"signup\">Signup</Link>\n        )}\n      </li>\n    </ul>\n  );\n}\nexport default Navbar;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n// // import Navbar from \"./Components/Navbar\";\nimport {\n  checkAuth,\n  authLogout,\n  authRequestSuccess,\n} from \"./Actions/bookListActions\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport UserList from \"./Components/UserList\";\nimport PrivateRoute from \"./HOC/AuthRoute\";\nimport Navbar from \"./Components/Navbar\";\n\nexport const myApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n});\n\nfunction App() {\n  const { dispatch } = useContext(AuthContext);\n  const history = useHistory();\n  const [loader, setLoader] = useState(true);\n  useEffect(() => {\n    myApp.auth().onAuthStateChanged(function (user) {\n      setLoader(false);\n      if (user) {\n        dispatch(checkAuth(true));\n\n        localStorage.setItem(\"userId\", JSON.stringify(user.uid));\n\n        dispatch(\n          authRequestSuccess({\n            data: {\n              localId: JSON.parse(localStorage.getItem(\"userId\")),\n            },\n            message: \"\",\n          })\n        );\n        history.replace(\"/booklist\");\n      } else {\n        dispatch(authLogout());\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        history.replace(\"/login\");\n        // User is signed out.\n        // ...\n      }\n    });\n\n    return () => console.log(\"clear it \");\n  }, [dispatch, history]);\n  return (\n    <div className=\"App\">\n      {(loader && <div>Loading...</div>) || (\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute path=\"/booklist\" component={UserList} />\n            <Route path=\"/\" exact component={Home} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport AuthContextProvider from \"./Context/AuthContext\";\nimport { HashRouter } from \"react-router-dom\";\nconst store = (\n  <HashRouter basename=\"/\">\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </HashRouter>\n);\nReactDOM.render(store, document.getElementById(\"root\"));\n"],"sourceRoot":""}