{"version":3,"sources":["Reducer/BooklistReducer.js","Actions/actionTypes.js","Actions/bookListActions.js","Context/BookList.js","CostumHooks/useRestApi.js","Components/Navbar.js","Components/Booklist.js","Components/ToogleButton.js","App.js","index.js"],"names":["initialState","books","loader","error","errorMessage","author","title","isUpdateButtonClicked","rootReducer","state","type","payload","filter","item","id","addBooksAction","response","removeBooksAction","fetchBooklistSucces","getSingleBooklist","BookListContext","createContext","BookListContextProvide","props","useReducer","dispatch","useCallback","method","params","booksData","fetch","then","res","json","data","console","log","Object","entries","forEach","key","value","push","catch","message","headers","body","JSON","stringify","name","err","useGetTodos","fetchData","useEffect","Provider","children","Navbar","useContext","length","Booklist","useState","setUpdates","updateHandler","className","map","onChange","onClick","ToogleButton","setTitle","setAuthor","bookTitleInput","useRef","bookAuthorInput","submitRef","current","focus","formSubmitHandler","e","preventDefault","onSubmit","placeholder","ref","target","onKeyDown","required","App","BookList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff656dcd.chunk.js","sourcesContent":["//  Initialize the state\n\nimport {\n  ADD_BOOKS,\n  REMOVE_BOOKS,\n  FETCH_BOOKLIST_SUCCESS,\n  SHOW_LOADER,\n  REMOVE_LOADER,\n  SHOW_ERROR,\n  HIDE_ERROR,\n  SET_INPUT_AUTHOR,\n  SET_INPUT_TITLE,\n  GET_SINGLE_BOOKLIST_SUCCESS,\n} from \"../Actions/actionTypes\";\n\nexport const initialState = {\n  books: [],\n  loader: false,\n  error: false,\n  errorMessage: \"\",\n  author: \"\",\n  title: \"\",\n  isUpdateButtonClicked: false,\n};\n\nconst rootReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_BOOKS:\n      return {\n        ...state,\n        books: [...state.books, payload],\n      };\n    case REMOVE_BOOKS:\n      return {\n        ...state,\n        books: state.books.filter((item) => item.id !== payload),\n      };\n    case FETCH_BOOKLIST_SUCCESS:\n      return {\n        ...state,\n        books: payload,\n      };\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loader: true,\n      };\n    case REMOVE_LOADER:\n      return {\n        ...state,\n        loader: false,\n      };\n    case SHOW_ERROR:\n      return {\n        ...state,\n        error: true,\n        errorMessage: payload,\n      };\n    case HIDE_ERROR:\n      return {\n        ...state,\n        error: false,\n        errorMessage: \"\",\n      };\n    case SET_INPUT_AUTHOR:\n      return {\n        ...state,\n        author: payload,\n      };\n    case SET_INPUT_TITLE:\n      return {\n        ...state,\n        title: payload,\n      };\n    case GET_SINGLE_BOOKLIST_SUCCESS:\n      return {\n        ...state,\n        author: payload.author,\n        title: payload.title,\n        isUpdateButtonClicked: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","export const ADD_BOOKS = \"ADD_BOOKS\";\nexport const REMOVE_BOOKS = \"REMOVE_BOOKS\";\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const REMOVE_LOADER = \"REMOVE_LOADER\";\nexport const SHOW_ERROR = \"SHOW_ERROR\";\nexport const HIDE_ERROR = \"HIDE_ERROR\";\nexport const FETCH_BOOKLIST_SUCCESS = \"FETCH_BOOKLIST_SUCCESS\";\n\nexport const SET_INPUT_AUTHOR = \"SET_INPUT_AUTHOR\";\nexport const SET_INPUT_TITLE = \"SET_INPUT_TITLE\";\n\nexport const GET_SINGLE_BOOKLIST_SUCCESS = \"GET_SINGLE_BOOKLIST_SUCCESS\";\n","import {\n  ADD_BOOKS,\n  REMOVE_BOOKS,\n  SHOW_ERROR,\n  SHOW_LOADER,\n  HIDE_ERROR,\n  REMOVE_LOADER,\n  FETCH_BOOKLIST_SUCCESS,\n  SET_INPUT_TITLE,\n  SET_INPUT_AUTHOR,\n  GET_SINGLE_BOOKLIST_SUCCESS,\n} from \"./actionTypes\";\n\nexport const addBooksAction = (response) => ({\n  type: ADD_BOOKS,\n  payload: response,\n});\n\nexport const removeBooksAction = (response) => ({\n  type: REMOVE_BOOKS,\n  payload: response,\n});\n\nexport const showLoaderAction = () => ({ type: SHOW_LOADER });\n\nexport const removeLoaderAction = () => ({ type: REMOVE_LOADER });\n\nexport const showErrorAction = (response) => ({\n  type: SHOW_ERROR,\n  payload: response,\n});\n\nexport const removeErrorAction = () => ({ type: HIDE_ERROR });\n\nexport const fetchBooklistSucces = (response) => ({\n  type: FETCH_BOOKLIST_SUCCESS,\n  payload: response,\n});\n\nexport const setInputTitle = (response) => ({\n  type: SET_INPUT_TITLE,\n  payload: response,\n});\n\nexport const setInputAuthor = (response) => ({\n  type: SET_INPUT_AUTHOR,\n  payload: response,\n});\n\nexport const getSingleBooklist = (response) => ({\n  type: GET_SINGLE_BOOKLIST_SUCCESS,\n  payload: response,\n});\n","import React, { createContext, useEffect } from \"react\";\nimport { useGetTodos } from \"../CostumHooks/useRestApi\";\nexport const BookListContext = createContext();\n\nconst BookListContextProvide = (props) => {\n  // const [state, dispatch] = useReducer(reducer, InitialState);\n  const [state, fetchData] = useGetTodos();\n  useEffect(() => {\n    fetchData();\n    return () => console.log(\"Please remove me\");\n  }, [fetchData]);\n  return (\n    <BookListContext.Provider value={{ state, fetchData }}>\n      {props.children}\n    </BookListContext.Provider>\n  );\n};\n\nexport default BookListContextProvide;\n","import { useCallback, useReducer } from \"react\";\nimport rootReducer, { initialState } from \"../Reducer/BooklistReducer\";\nimport {\n  fetchBooklistSucces,\n  addBooksAction,\n  removeBooksAction,\n  getSingleBooklist,\n} from \"../Actions/bookListActions\";\n// Creating the MY custum hooks\n\nexport const useGetTodos = () => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n\n  const fetchData = useCallback(({ method = \"GET\", params = {} } = {}) => {\n    let booksData = [];\n    // localStorage.todo = JSON.stringify(state.books);\n    if (method === \"GET\") {\n      fetch(\"https://test-projects-dacb2.firebaseio.com/todo.json\")\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          if (data) {\n            Object.entries(data).forEach(([key, value]) => {\n              booksData.push({ id: key, ...value });\n            });\n          }\n          dispatch(fetchBooklistSucces(booksData));\n        })\n        .catch(({ message }) => {\n          console.log(message);\n        });\n    }\n\n    if (method === \"POST\") {\n      fetch(\"https://test-projects-dacb2.firebaseio.com/todo.json\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          dispatch(addBooksAction({ ...params, id: data.name }));\n          // dispatch({\n          //   type: \"ADD_BOOKS\",\n          //   payload: { title, author, id: data.name },\n          // // });\n          // setAuthor(\"\");\n          // setTitle(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n    if (method === \"DELETE\") {\n      fetch(`https://test-projects-dacb2.firebaseio.com/todo/${params}/.json`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        // body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          dispatch(removeBooksAction(params));\n          // dispatch({\n          //   type: \"DELETE_BOOKS\",\n          //   payload: id,\n          // })\n          // dispatch(addBooksAction({ ...params, id: data.name }));\n          // dispatch({\n          //   type: \"ADD_BOOKS\",\n          //   payload: { title, author, id: data.name },\n          // // });\n          // setAuthor(\"\");\n          // setTitle(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n    // METHOD for the update\n    if (method === \"UPDATE\") {\n      fetch(`https://test-projects-dacb2.firebaseio.com/todo/${params}/.json`, {\n        method: \"UPDATE\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        // body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          dispatch(removeBooksAction(params));\n          // dispatch({\n          //   type: \"DELETE_BOOKS\",\n          //   payload: id,\n          // })\n          // dispatch(addBooksAction({ ...params, id: data.name }));\n          // dispatch({\n          //   type: \"ADD_BOOKS\",\n          //   payload: { title, author, id: data.name },\n          // // });\n          // setAuthor(\"\");\n          // setTitle(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n    // Get the single element\n    if (method === \"id\") {\n      fetch(`https://test-projects-dacb2.firebaseio.com/todo/${params}/.json`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        // body: JSON.stringify(params),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch(getSingleBooklist(data));\n          // dispatch(removeBooksAction(params));\n          // dispatch({\n          //   type: \"DELETE_BOOKS\",\n          //   payload: id,\n          // })\n          // dispatch(addBooksAction({ ...params, id: data.name }));\n          // dispatch({\n          //   type: \"ADD_BOOKS\",\n          //   payload: { title, author, id: data.name },\n          // // });\n          // setAuthor(\"\");\n          // setTitle(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n\n    return () => console.log(\"Just wipe me out\");\n  }, []);\n  return [state, fetchData];\n};\n","import React, { useContext } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// const CouunterContext = React.createContext(\"123\");\n\n// class Navbar extends Component {\n//   // static contextType = ThemeContext;\n\n//   render() {\n//     return (\n//       <AuthContext.Consumer>\n//         {(authContext) => (\n//           <ThemeContext.Consumer>\n//             {(themeContext) => {\n//               const { isAuthenticated, toggleAuth } = authContext;\n//               const { name, hobby, isLight, dark, light } = themeContext;\n//               // console.log(this.context.name);\n//               const theme = isLight ? light : dark;\n//               return (\n//                 <div style={{ background: theme.bg, color: theme.tc }}>\n//                   <nav>\n//                     <h1>{name + \" \" + hobby}</h1>\n//                     <button onClick={toggleAuth}>\n//                       {isAuthenticated ? \"Log IN\" : \"Log out\"}\n//                     </button>\n//                     <ul>\n//                       <li>Home</li>\n//                       <li>About</li>\n//                       <li>Contact</li>\n//                     </ul>\n//                   </nav>\n//                 </div>\n//               );\n//             }}\n//           </ThemeContext.Consumer>\n//         )}\n//       </AuthContext.Consumer>\n//     );\n//   }\n// }\n\n// export default Navbar;\nfunction Navbar(props) {\n  const { state } = useContext(BookListContext);\n  return (\n    <nav>\n      <h1>My Booklist on react hooks</h1>\n      <p>Currently we have {state.books.length} books </p>\n    </nav>\n  );\n}\nexport default Navbar;\n","import React, { useContext, useState } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// class Booklist extends Component {\n//   static contextType = ThemeContext;\n\n//   render() {\n//     const { isLight, dark, light } = this.context;\n//     const theme = isLight ? light : dark;\n\n//     return (\n//       <div\n//         className=\"book-list\"\n//         style={{ background: theme.bg, color: theme.tc }}\n//       >\n//         <ul>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Think like a monk\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Three Mistakes of my life\n//           </li>\n//           <li style={{ background: theme.ui, color: theme.bg }}>\n//             Dhoni the untold story\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Booklist;\nfunction Booklist(props) {\n  const { state, fetchData } = useContext(BookListContext);\n  const [isUpdateButtonClicked, setUpdates] = useState(false);\n  const updateHandler = () => {\n    setUpdates(!isUpdateButtonClicked);\n  };\n\n  return (\n    <div className=\"book-list\">\n      {state.books.length > 0 ? (\n        <ul>\n          {state.books.map(({ id, title, author }) => (\n            <li key={id} className=\"booklist__item\">\n              <div className=\"content\">\n                <div className=\"title\">\n                  {(isUpdateButtonClicked && (\n                    <input type=\"text\" value={title} onChange={() => null} />\n                  )) ||\n                    title}\n                </div>\n                <div className=\"author\">{author}</div>\n              </div>\n              {/*<button onClick={() => fetchData({ method: \"id\", params: id })}>\n                Update\n          </button>*/}\n              <button onClick={updateHandler}>Update</button>\n              <button\n                onClick={() => fetchData({ method: \"DELETE\", params: id })}\n                className=\"remove_btn\"\n              >\n                X\n              </button>{\" \"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No books found</div>\n      )}\n    </div>\n  );\n}\n\nexport default Booklist;\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { BookListContext } from \"../Context/BookList\";\n\n// class ToogleButton extends Component {\n//   static contextType = ThemeContext;\n//   render() {\n//     return <button onClick={this.context.themeToggler}>Toogle Theme</button>;\n//   }\n// }\n\n// export default ToogleButton;\n\nconst ToogleButton = () => {\n  const { state, fetchData } = useContext(BookListContext);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const bookTitleInput = useRef(null);\n  const bookAuthorInput = useRef(null);\n  const submitRef = useRef(null);\n\n  // useEffect(() => {\n  //   bookTitleInput.current.focus();\n  // }, []);\n  useEffect(() => {\n    bookTitleInput.current.focus();\n  }, [state.books]);\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    fetchData({ method: \"POST\", params: { title, author } });\n    setTitle(\"\");\n    setAuthor(\"\");\n  };\n  function onKeyTitleHandler(e) {\n    if (e.key === \"Enter\") {\n      bookAuthorInput.current.focus();\n    }\n  }\n  function onKeyAuthorHandler(e) {\n    if (e.key === \"Enter\") {\n      submitRef.current.focus();\n    }\n  }\n  function onKeySubmitHandler(e) {\n    formSubmitHandler(e);\n  }\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <input\n        name=\"bookName\"\n        placeholder=\"Enter book Name \"\n        value={title}\n        ref={bookTitleInput}\n        onChange={(e) => setTitle(e.target.value)}\n        onKeyDown={onKeyTitleHandler}\n        required\n      />\n      <input\n        name=\"bookAuthor\"\n        placeholder=\"Enter book Author\"\n        ref={bookAuthorInput}\n        onChange={(e) => setAuthor(e.target.value)}\n        value={author}\n        onKeyDown={onKeyAuthorHandler}\n        required\n      />\n      <button type=\"submit\" onKeyDown={onKeySubmitHandler} ref={submitRef}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default ToogleButton;\n","import React from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Booklist from \"./Components/Booklist\";\nimport BookListContextProvide from \"./Context/BookList\";\nimport ToogleButton from \"./Components/ToogleButton\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BookListContextProvide>\n        <Navbar />\n        <ToogleButton />\n        <Booklist />\n      </BookListContextProvide>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}